{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","sort","goodA","goodB","ALPABETICALLY","localeCompare","LENGHT","length","reverse","orderGoods","reset","className","type","cn","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,mBAAAA,I,iCAAAA,I,gBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAzBR,SAAoBC,EAApB,GAC2C,IAAvCL,EAAsC,EAAtCA,SAAUE,EAA4B,EAA5BA,WACNE,EAAY,YAAOC,GAiBzB,OAfAD,EAAaE,MAAK,SAACC,EAAeC,GAChC,OAAQR,GACN,KAAKL,EAASc,cACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITV,GACFE,EAAaS,UAGRT,EAMcU,CAAWlB,EAAiB,CAAEI,WAAUE,eAmBvDa,EAAQf,IAAaL,EAASI,MAAQG,EAE5C,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYlB,IAAaL,EAASc,gBAEpCU,QA3BmB,WACzBlB,EAAYN,EAASc,gBAqBjB,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYlB,IAAaL,EAASgB,SAEpCQ,QAjCa,WACnBlB,EAAYN,EAASgB,SA2BjB,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAahB,IAEfiB,QAvCY,WAClBhB,GAAc,SAAAiB,GAAO,OAAKA,MAiCtB,qBAUCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA5CQ,WAChBlB,EAAYN,EAASI,MACrBI,GAAc,IAuCR,sBAUJ,6BACE,6BACGC,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCvHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.88660593.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  LENGHT,\n  ALPABETICALLY,\n  NONE,\n}\n\ntype OrderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction orderGoods(goods: string[],\n  { sortType, isReversed }: OrderOptions) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA: string, goodB: string) => {\n    switch (sortType) {\n      case SortType.ALPABETICALLY:\n        return goodA.localeCompare(goodB);\n      case SortType.LENGHT:\n        return goodA.length - goodB.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = orderGoods(goodsFromServer, { sortType, isReversed });\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPABETICALLY);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGHT);\n  };\n\n  const sortReverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  const sortReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const reset = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortType !== SortType.ALPABETICALLY,\n          })}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortType !== SortType.LENGHT,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={sortReverse}\n        >\n          Reverse\n        </button>\n\n        {reset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={sortReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}